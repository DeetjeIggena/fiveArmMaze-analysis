% function returns number of nodes and an array of the nodes-coordinates
% which belong to the shortest path between two positions

function [nodesNo, nodesArray] = fam_shortestPath(arrayStart,...
    arrayInPentagon, arrayExPentagon, posA, posB)

%%
% 20 nodes by default
smNodes      = [1 1 1 2 2 2 3 3 3 4 4 4 5 5 5 ...
    20 12 14 16 18 6 6 7 8 9 ...
    11 12 13 14 15 16 17 18 19 20];
smConnection = [20 6 11 12 7 13 14 8 15 16 9 17 18 10 19 ...
    19 11 13 15 17 7 10 8 9 10 ...
    7 6 8 7 9 8 10 9 6 10];
smWeights    = [2 3 2 2 3 2 2 3 2 2 3 2 2 3 2 ...
    1 1 1 1 1 1 1 1 1 1 ...
    1 1 1 1 1 1 1 1 1 1];

x = [arrayStart(1,1) arrayStart(2,1) arrayStart(3,1) arrayStart(4,1) arrayStart(5,1) ...
    arrayInPentagon(1,1) arrayInPentagon(2,1) arrayInPentagon(3,1)...
    arrayInPentagon(4,1) arrayInPentagon(5,1) ...
    arrayExPentagon(2,1) arrayExPentagon(3,1) arrayExPentagon(4,1) ...
    arrayExPentagon(5,1) arrayExPentagon(6,1) arrayExPentagon(7,1) ...
    arrayExPentagon(8,1) arrayExPentagon(9,1) arrayExPentagon(10,1) ...
    arrayExPentagon(1,1)];
y = [arrayStart(1,2) arrayStart(2,2) arrayStart(3,2) arrayStart(4,2) arrayStart(5,2) ...
    arrayInPentagon(1,2) arrayInPentagon(2,2) arrayInPentagon(3,2)...
    arrayInPentagon(4,2) arrayInPentagon(5,2) ...
    arrayExPentagon(2,2) arrayExPentagon(3,2) arrayExPentagon(4,2) ...
    arrayExPentagon(5,2) arrayExPentagon(6,2) arrayExPentagon(7,2) ...
    arrayExPentagon(8,2) arrayExPentagon(9,2) arrayExPentagon(10,2) ...
    arrayExPentagon(1,2)];

nodesCoordinates = [x;y]';

G     = graph(smNodes,smConnection,smWeights);
names = {'S1' 'S2' 'S3' 'S4' 'S5' 'iP1' 'iP2' 'iP3' 'iP4' 'iP5' ...
    'eP1' 'eP2' 'eP3' 'eP4' 'eP5' 'eP6' 'eP7' 'eP8' 'eP9' 'eP10'}';
G.Nodes.Name = names;

nodesNo = length(names);

 figure('visible','off')
 p=plot(G,'XData',x,'YData',y);

[pathNodes,~] = shortestpath(G,posA,posB);
highlight(p,pathNodes,'EdgeColor','g');

[~,col] = size(pathNodes);
%nodesCoordinates
for i = 1:col
    z = pathNodes(i);
    nodesArray(i,1) = nodesCoordinates(z,1);
    nodesArray(i,2) = nodesCoordinates(z,2); 
end

end